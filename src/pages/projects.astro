---
import { Markdown } from 'astro/components';
import MainHead from '../components/MainHead.astro';
import ProjectPreview from '../components/ProjectPreview/index.tsx';

const projects = Astro.fetchContent('./project/*.md')
  .filter(({ published_at }) => !!published_at)
  .sort((a, b) => new Date(b.published_at) - new Date(a.published_at));
---

<html lang="en">
  <head>
    <MainHead title="All Projects | Sebastian Darie" />
    <style lang="scss">
      .content-container {
        font-size: 17px;
        line-height: 20px;
        font-family: 'Lato', sans-serif;
      }

      .content {
        margin: auto;
        margin-left: calc(2px + 7.5vw);
        max-width: 88%;
        padding-bottom: 90px;
        padding-top: 35px;
      }

      .content article.about {
        margin-bottom: 35px;
      }

      .content a {
        text-decoration: none;
        color: #2841a6;
      }

      .content a:hover,
      .content a:active {
        color: inherit;
        text-decoration: underline;
      }

      .content ul {
        font-weight: bold;
        margin-bottom: 20px;
      }

      .content li {
        font-weight: normal;
      }

      .content ul > li:before {
        color: black;
        font-weight: normal;
        content: '- ';
      }

      .content li > article {
        margin-top: 30px;
        max-width: 780px;
      }

      .content .sub-list {
        font-weight: normal;
      }

      .content img {
        border: 1px solid #22212647;
        margin: -10px 20px 25px 0;
        max-height: 120px;
        display: inline-block;
      }

      .content li > a > h2,
      .content li > h2,
      .content li h3,
      .content li h4 {
        display: inline;
      }

      .content .project-showcase {
        line-height: 1.4em;
      }

      .content .project-showcase h2 {
        text-transform: uppercase;
        letter-spacing: 2px;
        line-height: 31px;
      }

      .content .project-showcase > li {
        margin-bottom: 80px;
      }

      .content .project-showcase li:before {
        content: none;
      }

      .content .project-showcase > li {
        padding-top: 13px;
        border-top: 1px solid #22212647;
        max-width: 780px;
      }

      .react {
        color: #61dafb;
      }

      .firebase {
        color: #ffca28;
      }

      .graphql {
        color: #e535ab;
      }

      .postgres {
        color: #0064a5;
      }

      .typescript {
        color: #007acc;
      }
    </style>
  </head>
  <body>
    <header>
      <nav>
        <ul>
          <li>
            <a href='/'>home</a>
          </li>
          <li>
            <a href='/projects'>projects</a>
          </li>
          <li>
            <a href='/about'>about</a>
          </li>
          <!-- <li>
            <a href='/'>home</a>
          </li> -->
        </ul>
      </nav>
      <section class="title">
        <h1>projects</h1>
      </section>
    </header>
    <div class="content-container">
      <section class="content">
        <article class="about">
          <p>Here are some things I've worked on.</p>
          <p>Click on an image to be taken to the specific page on the site.</p>
          <p>My information is on the home page.</p>
        </article>
        <section class="information">
          <ul class="project-showcase">
            <li>
              <a href="https://twitter-clone-c0b2e.web.app/" target="_blank">
                <h2>Twitter Clone</h2>
              </a>
              <article>
                <a href="https://twitter-clone-c0b2e.web.app/" target="_blank">
                  <img src="assets/twitter-clone.png" alt="home page">
                </a>
                <a href="https://twitter-clone-c0b2e.web.app/Alexander%20III" target="_blank">
                  <img src="assets/twitter-profile.png" alt="profile page">
                </a>
                <a href="https://twitter-clone-c0b2e.web.app/tweet/DCqBjRMXiOsdmM7PO6RA" target="_blank">
                  <img src="assets/twitter-tweet.png" alt="tweet page">
                </a>
                <p>
                  This react app was made and designed with the intentions to replicate Twitter's core functionality.
                  This single page app is built with <span class="react">React(CRA)</span> and <span class="firebase">Firebase</span>.
                  Firebase is used as a BaaS which provides all of the CRUD functionality, the data is then stored in Redux. 
                  For styling it uses Styled-Components. It implements the suggested code-splitting methods by React like React.lazy and Suspense.
                  Some of its core features are user profiles, tweets, hearts, retweets, comments, following, search functionality both for users and tweets.
                </p>
              </article>
            </li>

            <li>
              <a href="https://reddit-clone.tech/" target="_blank">
                <h2>Reddit Clone</h2>
              </a>
              <article>
                <a href="https://reddit-clone.tech/" target="_blank">
                  <img src="assets/reddit-clone.png" alt="home page">
                </a>
                <a href="https://reddit-clone.tech/user/ben" target="_blank">
                  <img src="assets/reddit-user.png" alt="user page">
                </a>
                <a href="https://reddit-clone.tech/r/React" target="_blank">
                  <img src="assets/reddit-community.png" alt="community page">
                </a>
                <p>
                  This site was built to include Reddit's core features. Features a new tech stack that I've never previously worked it
                  including Next.js instead of the traditional CRA, <span class="graphql">GraphQL</span> with Apollo, as well as a relational
                  database <span class="postgres">Postgres</span>. It's also the first time I started using <span class="typescript">Typescript</span>
                  in my projects. For styling it uses Chakra UI which provides a very convinient dark mode. It includes user profiles, 
                  communities, filtering posts, creation of 3 types of posts, comments(nested), upvotes, random avatar on user creation just like Reddit.
                </p>
              </article>
            </li>

            <li>
              <a href="https://mernlabs.team/" target="_blank">
                <h2>Airbnb Clone</h2>
              </a>
              <article>
                <a href="https://mernlabs.team/" target="_blank">
                  <img src="assets/airbnb-clone.png" alt="home page">
                </a>
                <a href="" target="_blank">
                  <img src="" alt="">
                </a>
                <a href="" target="_blank">
                  <img src="" alt="">
                </a>
                <p></p>
              </article>
            </li>
          </ul>
        </section>
      </section>
    </div>
  </body>
</html>
